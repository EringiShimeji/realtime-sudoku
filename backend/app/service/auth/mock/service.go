// Code generated by MockGen. DO NOT EDIT.
// Source: service.go
//
// Generated by this command:
//
//	mockgen -source=service.go -destination=mock/service.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	auth "sudoku/service/auth"

	gomock "go.uber.org/mock/gomock"
)

// MockIAuthService is a mock of IAuthService interface.
type MockIAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthServiceMockRecorder
}

// MockIAuthServiceMockRecorder is the mock recorder for MockIAuthService.
type MockIAuthServiceMockRecorder struct {
	mock *MockIAuthService
}

// NewMockIAuthService creates a new mock instance.
func NewMockIAuthService(ctrl *gomock.Controller) *MockIAuthService {
	mock := &MockIAuthService{ctrl: ctrl}
	mock.recorder = &MockIAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthService) EXPECT() *MockIAuthServiceMockRecorder {
	return m.recorder
}

// SignIn mocks base method.
func (m *MockIAuthService) SignIn(arg0 auth.SignInInput) (auth.SignInOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignIn", arg0)
	ret0, _ := ret[0].(auth.SignInOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignIn indicates an expected call of SignIn.
func (mr *MockIAuthServiceMockRecorder) SignIn(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignIn", reflect.TypeOf((*MockIAuthService)(nil).SignIn), arg0)
}

// SignOut mocks base method.
func (m *MockIAuthService) SignOut(arg0 auth.SignOutInput) (auth.SignOutOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignOut", arg0)
	ret0, _ := ret[0].(auth.SignOutOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignOut indicates an expected call of SignOut.
func (mr *MockIAuthServiceMockRecorder) SignOut(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignOut", reflect.TypeOf((*MockIAuthService)(nil).SignOut), arg0)
}
